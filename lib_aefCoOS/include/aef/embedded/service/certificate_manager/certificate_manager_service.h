
/**
* certificate_manager_service.h
*
* \copyright
* Copyright 2015 Advanced Embedded Frameworks, LLC. All Rights Reserved.
*
* \author
* Albert E. Warren Jr. (warrendev@outlook.com)
*
* \brief Definitions used with the system certificate manager service.
*
*/

#ifndef INCLUDE_AEF_EMBEDDED_SERVICE_CERTIFICATE_MANAGER_CERTIFICATE_MANAGER_SERVICE_H_
#define INCLUDE_AEF_EMBEDDED_SERVICE_CERTIFICATE_MANAGER_CERTIFICATE_MANAGER_SERVICE_H_

#include <aef/embedded/service/srvddk/uefsrvddk.h>

/**
* The IOCTL function codes from 0x800 to 0xFFF are for customer use.
*
* The format of I/O control codes for the iocontrol call:
*    ((DeviceType) << 16) | ((Access) << 14) | ((Function) << 2) | (Method)
*
* Configuring system service I/O control codes in this manner produces
* unique system-wide I/O control codes.  It also provides a mechanism for
* isolating kernel mode memory spaces from user mode memory spaces and
* allows us to use the memory protection unit (MPU) of the processor.
*/

/*
* Certificate manager base function codes
*/
#define CERTIFICATE_MANAGER_INITIALIZE			0x800
#define CERTIFICATE_MANAGER_RESET				0x801
#define CERTIFICATE_MANAGER_START_VALIDATION	0x802
#define CERTIFICATE_MANAGER_CONTINUE_VALIDATION	0x803
#define CERTIFICATE_MANAGER_ADD_CERTIFICATE		0x804
#define CERTIFICATE_MANAGER_DELETE_CERTIFICATE	0x805
#define CERTIFICATE_MANAGER_FIND_CERTIFICATE	0x806


/*
* Certificate manager service I/O Control codes
*/
#define IOCTL_CERTIFICATE_MANAGER_INITIALIZE			SRVIOCTLCODE(SERVICE_TYPE_CERTIFICATE_MANAGER,CERTIFICATE_MANAGER_INITIALIZE,SERVICE_METHOD_DIRECT,SERVICE_ANY_ACCESS)
#define IOCTL_CERTIFICATE_MANAGER_RESET					SRVIOCTLCODE(SERVICE_TYPE_CERTIFICATE_MANAGER,CERTIFICATE_MANAGER_RESET,SERVICE_METHOD_DIRECT,SERVICE_ANY_ACCESS)
#define IOCTL_CERTIFICATE_MANAGER_START_VALIDATION		SRVIOCTLCODE(SERVICE_TYPE_CERTIFICATE_MANAGER,CERTIFICATE_MANAGER_START_VALIDATION,SERVICE_METHOD_DIRECT,SERVICE_ANY_ACCESS)
#define IOCTL_CERTIFICATE_MANAGER_CONTINUE_VALIDATION	SRVIOCTLCODE(SERVICE_TYPE_CERTIFICATE_MANAGER,CERTIFICATE_MANAGER_CONTINUE_VALIDATION,SERVICE_METHOD_DIRECT,SERVICE_ANY_ACCESS)
#define IOCTL_CERTIFICATE_MANAGER_ADD_CERTIFICATE		SRVIOCTLCODE(SERVICE_TYPE_CERTIFICATE_MANAGER,CERTIFICATE_MANAGER_ADD_CERTIFICATE,SERVICE_METHOD_DIRECT,SERVICE_ANY_ACCESS)
#define IOCTL_CERTIFICATE_MANAGER_DELETE_CERTIFICATE	SRVIOCTLCODE(SERVICE_TYPE_CERTIFICATE_MANAGER,CERTIFICATE_MANAGER_DELETE_CERTIFICATE,SERVICE_METHOD_DIRECT,SERVICE_ANY_ACCESS)
#define IOCTL_CERTIFICATE_MANAGER_FIND_CERTIFICATE		SRVIOCTLCODE(SERVICE_TYPE_CERTIFICATE_MANAGER,CERTIFICATE_MANAGER_FIND_CERTIFICATE,SERVICE_METHOD_DIRECT,SERVICE_ANY_ACCESS)

#endif /* INCLUDE_AEF_EMBEDDED_SERVICE_CERTIFICATE_MANAGER_CERTIFICATE_MANAGER_SERVICE_H_ */
